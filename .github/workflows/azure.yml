name: Deploy Docker Image to Azure VM

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/vehicleproj:latest .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/vehicleproj:latest

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    env:
      AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      
    steps:
      - name: Login to Azure Container Registry on VM
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Pull Docker image from ACR
        run: docker pull "${{ secrets.ACR_LOGIN_SERVER }}/vehicleproj:latest"

      - name: Stop and remove existing container (if any)
        run: |
          CONTAINER_ID=$(docker ps -q --filter "ancestor=${{ secrets.ACR_LOGIN_SERVER }}/vehicleproj:latest")
          if [ -n "$CONTAINER_ID" ]; then
            docker stop "$CONTAINER_ID"
            docker rm "$CONTAINER_ID"
          else
            echo "No existing container found for image."
          fi


      - name: Run Docker container
        run: docker run -d --env AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }} -p 5000:5000 "${{ secrets.ACR_LOGIN_SERVER }}/vehicleproj:latest"

